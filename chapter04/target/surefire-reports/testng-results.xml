<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="18" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="4217" started-at="2016-03-08T19:46:17Z" finished-at="2016-03-08T19:46:22Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="4217" started-at="2016-03-08T19:46:17Z" finished-at="2016-03-08T19:46:22Z">
      <class name="chapter04.general.MergeRefreshTest">
        <test-method status="PASS" signature="testMerge()[pri:0, instance:chapter04.general.MergeRefreshTest@67b64c45]" name="testMerge" duration-ms="18" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMerge -->
        <test-method status="PASS" signature="testRefresh()[pri:0, instance:chapter04.general.MergeRefreshTest@67b64c45]" name="testRefresh" duration-ms="12" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRefresh -->
      </class> <!-- chapter04.general.MergeRefreshTest -->
      <class name="chapter04.broken.BrokenInversionTest">
        <test-method status="PASS" signature="testBrokenInversionCode()[pri:0, instance:chapter04.broken.BrokenInversionTest@3cda1055]" name="testBrokenInversionCode" duration-ms="3840" started-at="2016-03-08T14:46:17Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrokenInversionCode -->
        <test-method status="PASS" signature="testImpliedRelationship()[pri:0, instance:chapter04.broken.BrokenInversionTest@3cda1055]" name="testImpliedRelationship" duration-ms="7" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpliedRelationship -->
        <test-method status="PASS" signature="testProperSimpleInversionCode()[pri:0, instance:chapter04.broken.BrokenInversionTest@3cda1055]" name="testProperSimpleInversionCode" duration-ms="7" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProperSimpleInversionCode -->
      </class> <!-- chapter04.broken.BrokenInversionTest -->
      <class name="chapter04.general.PersistingEntitiesTest">
        <test-method status="PASS" signature="testSaveLoad()[pri:0, instance:chapter04.general.PersistingEntitiesTest@7a5d012c]" name="testSaveLoad" duration-ms="6" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveLoad -->
        <test-method status="PASS" signature="testSaveOrUpdateEntity()[pri:0, instance:chapter04.general.PersistingEntitiesTest@7a5d012c]" name="testSaveOrUpdateEntity" duration-ms="18" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveOrUpdateEntity -->
        <test-method status="PASS" signature="testSavingEntitiesTwice()[pri:0, instance:chapter04.general.PersistingEntitiesTest@7a5d012c]" name="testSavingEntitiesTwice" duration-ms="11" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavingEntitiesTwice -->
      </class> <!-- chapter04.general.PersistingEntitiesTest -->
      <class name="chapter04.mapped.WorkingInversionTest">
        <test-method status="PASS" signature="testBrokenInversionCode()[pri:0, instance:chapter04.mapped.WorkingInversionTest@668bc3d5]" name="testBrokenInversionCode" duration-ms="10" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrokenInversionCode -->
        <test-method status="PASS" signature="testImpliedRelationship()[pri:0, instance:chapter04.mapped.WorkingInversionTest@668bc3d5]" name="testImpliedRelationship" duration-ms="8" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImpliedRelationship -->
        <test-method status="PASS" signature="testProperSimpleInversionCode()[pri:0, instance:chapter04.mapped.WorkingInversionTest@668bc3d5]" name="testProperSimpleInversionCode" duration-ms="12" started-at="2016-03-08T14:46:22Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProperSimpleInversionCode -->
      </class> <!-- chapter04.mapped.WorkingInversionTest -->
      <class name="chapter04.orphan.OrphanRemovalTest">
        <test-method status="PASS" signature="orphanRemovalTest()[pri:0, instance:chapter04.orphan.OrphanRemovalTest@5ebec15]" name="orphanRemovalTest" duration-ms="221" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orphanRemovalTest -->
      </class> <!-- chapter04.orphan.OrphanRemovalTest -->
      <class name="chapter04.id.IdentityTest">
        <test-method status="PASS" signature="testAutoIdentity()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testAutoIdentity" duration-ms="10" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoIdentity -->
        <test-method status="PASS" signature="testIdentityIdentity()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testIdentityIdentity" duration-ms="3" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentityIdentity -->
        <test-method status="PASS" signature="testNongeneratedIdentity()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testNongeneratedIdentity" duration-ms="3" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNongeneratedIdentity -->
        <test-method status="PASS" signature="testNongeneratedIdentityFailure()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testNongeneratedIdentityFailure" duration-ms="0" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <exception class="org.hibernate.id.IdentifierGenerationException">
            <message>
              <![CDATA[ids for this class must be manually assigned before calling save(): chapter04.id.NongeneratedIdentity]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.id.IdentifierGenerationException: ids for this class must be manually assigned before calling save(): chapter04.id.NongeneratedIdentity
	at org.hibernate.id.Assigned.generate(Assigned.java:34)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:101)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:189)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:132)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:775)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:748)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:753)
	at chapter04.id.IdentityTest.testNongeneratedIdentityFailure(IdentityTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.id.IdentifierGenerationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNongeneratedIdentityFailure -->
        <test-method status="PASS" signature="testSequenceIdentity()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testSequenceIdentity" duration-ms="2" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSequenceIdentity -->
        <test-method status="PASS" signature="testTableIdentity()[pri:0, instance:chapter04.id.IdentityTest@380fb434]" name="testTableIdentity" duration-ms="10" started-at="2016-03-08T14:46:21Z" finished-at="2016-03-08T14:46:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTableIdentity -->
      </class> <!-- chapter04.id.IdentityTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
